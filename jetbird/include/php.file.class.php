<?php
	
	/*	This file is part of Jetbird.
	
	    Jetbird is free software: you can redistribute it and/or modify
	    it under the terms of the GNU General Public License as published by
	    the Free Software Foundation, either version 3 of the License, or
	    (at your option) any later version.
	
	    Jetbird is distributed in the hope that it will be useful,
	    but WITHOUT ANY WARRANTY; without even the implied warranty of
	    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	    GNU General Public License for more details.
	
	    You should have received a copy of the GNU General Public License
	    along with Jetbird.  If not, see <http://www.gnu.org/licenses/>.
	*/
	
	class php_file{
		// Declare some statics
		const FILE_BASE =
"<?php
	
	/*	This file is part of Jetbird.
	
	    Jetbird is free software: you can redistribute it and/or modify
	    it under the terms of the GNU General Public License as published by
	    the Free Software Foundation, either version 3 of the License, or
	    (at your option) any later version.
	
	    Jetbird is distributed in the hope that it will be useful,
	    but WITHOUT ANY WARRANTY; without even the implied warranty of
	    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	    GNU General Public License for more details.
	
	    You should have received a copy of the GNU General Public License
	    along with Jetbird.  If not, see <http://www.gnu.org/licenses/>.
	*/
	
	/* File generated by php_file class on ///DATEPLACEHOLDER/// */
	
///DATAPLACEHOLDER///
	
?>";
		const DATA_PLACEHOLDER = "///DATAPLACEHOLDER///";
		const DATE_PLACEHOLDER = "///DATEPLACEHOLDER///";
		
		private $file, $constants, $output;
		
		public function __construct($file){
			if(file_exists($file)){
				echo "<b>Warning:</b> file <b>$file</b> exists, destroying...";
			}
			
			$this->file = $file;
		}
		
		public function add_constant(){
			$arguments = func_get_args();
			
			/* If argument is an array, it contains several constants, the array
			*  should look like:
			*  array
			*    'one' => string 'vareen'
			*    'two' => string 'vartwee'
			*    'three' => string 'varzeven'
			*
			*  If arguments are two strings: add_constant($name, $var)
			*/
			if(func_num_args() == 1 && is_array($arguments[0])){
				foreach($arguments[0] as $var_name => $var_data){
					if(isset($this->constants[$var_name])){
						die("duplicate entry");
					}
					$this->constants[$var_name] = $var_data;
				}
			}elseif(func_num_args() == 2){
				$this->constants[$arguments[0]] = $arguments[1];
			}else{
				return false;
			}
		}
		
		private function generate(){
			foreach($this->constants as $var_name => $var_data){
				$generated_content .= "\t" . 'define("'. $var_name .'", "' .$var_data .'");' . "\n";
			}
			
			$this->output = str_replace(php_file::DATA_PLACEHOLDER, $generated_content, php_file::FILE_BASE);
			$this->output = str_replace(php_file::DATE_PLACEHOLDER, date("c"), $this->output);
		}
		
		public function write(){
			$this->generate();
			
			if(!($file_handle = fopen($this->file, "w"))){
				die("Could not lock $file for writing");
			}
			
			fwrite($file_handle, $this->output);
			fclose($file_handle);
		}
	}	

?>